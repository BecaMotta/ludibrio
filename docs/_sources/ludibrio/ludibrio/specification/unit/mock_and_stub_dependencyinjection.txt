Trivial mocking or stubing for any external module (Dependecy Injection)
========================================================================

Ludibrio also offers a replace mode, which basically means if a "from ... import ..." statement is defined into a 'with' scope, the replay mechanism will return a mock object to replace the original object in namespace of the whole Python interpreter (including any modules, etc). There's a simple example below to illustrate how use it::


    >>> from ludibrio import Mock, Stub

    >>> with Mock() as time:
    ...     from time import time
    ...     time() >> 2


    >>> from time import time #mocked
    >>> time()
    2

    >>> time.validate()

    >>> with Stub() as tempo:
    ...     from os import times
    ...     tempo() >> 'haaaaa'
    >>> tempo()
    'haaaaa'

    >>> tempo.restore_import()

